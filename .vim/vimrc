"----------------------------------
" General
set laststatus=2
set number relativenumber " Show line numbers
set linebreak	" Break lines at word (requires Wrap lines)
set showbreak=+++ " Wrap-broken line prefix
set textwidth=500	" Line wrap (number of cols)
set showmatch	" Highlight matching brace

set visualbell
set smartcase	" Enable smart-case search
set ignorecase	" Always case-insensitive
set incsearch	" Searches for strings incrementally
set nocompatible

set cindent
set autoindent	    " Smart-indent new lines
set shiftwidth=4    " Number of auto-indent spaces
set smartindent	    " Enable smart-indent
set smarttab	    " Enable smart-tabs
set softtabstop=4   " Number of spaces per Tab
set ruler	" Show row and column ruler information
set noshowmode
 
set undolevels=100	" Number of undo levels
set backspace=indent,eol,start	" Backspace behaviour
set wildmenu
"set wildmode=longest:full
set wildignorecase

ab #d #define 
ab #i #include <> 

filetype plugin indent on
filetype plugin on

"--------------------------------
" Plugins -----------------------
"--------------------------------
call plug#begin()
" The default plugin directory will be as follows:
  "   - Vim (Linux/macOS): '~/.vim/plugged'
  "   - Vim (Windows): '~/vimfiles/plugged'
  "   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
  " You can specify a custom plugin directory by passing it as the argument
  "   - e.g. `call plug#begin('~/.vim/plugged')`
  "   - Avoid using standard Vim directory names like 'plugin'
 
  " Make sure you use single quotes
 
  " Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
  Plug 'junegunn/vim-easy-align'
 
  " Any valid git URL is allowed
  Plug 'https://github.com/junegunn/vim-github-dashboard.git'
 
  " Multiple Plug commands can be written in a single line using | separators
  Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
 
  " On-demand loading
  Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
  Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

  " Vim lightline
  Plug 'itchyny/lightline.vim'
 
  " Using a non-default branch
  Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }
 
  " Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
  Plug 'fatih/vim-go', { 'tag': '*' }
 
  " Plugin options
  Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }
 
  " Plugin outside ~/.vim/plugged with post-update hook
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
 
  " Unmanaged plugin (manually installed and updated)
  Plug '~/my-prototype-plugin'

  Plug 'EdenEast/nightfox.nvim' " Vim-Plug

  Plug 'arcticicestudio/nord-vim'
  " Initialize plugin system
  call plug#end()
  "...

  colorscheme nordfox
  set number relativenumber
  set laststatus=2
  let g:lightline = {
	        \ 'colorscheme': 'nord',
        \ }
